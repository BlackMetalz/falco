falco:
  http_output:
    enabled: true
    url: "http://falcosidekick.falco.svc.cluster.local:2801"
  json_output: true

json_include_output_property: true

customRules:
  rules-priority.yaml: |-
    # In some cases, a shell is expected to be run in a container. For example, configuration
    # management software may do this, which is expected.
    - macro: user_expected_terminal_shell_in_container_conditions
      condition: (never_true)

    - rule: Terminal shell in container
      desc: A shell was used as the entrypoint/exec point into a container with an attached terminal
      condition: >
        spawned_process and container
        and shell_procs and proc.tty != 0
        and container_entrypoint
        and not user_expected_terminal_shell_in_container_conditions
      output: >
        A shell was spawned in a container with an attached terminal (user=%user.name user_loginuid=%user.loginuid %container.info
        shell=%proc.name parent=%proc.pname cmdline=%proc.cmdline terminal=%proc.tty container_id=%container.id image=%container.image.repository)
      priority: ERROR
      tags: [container, shell, mitre_execution]
  detect-cat-in-container.yaml: |-
      - rule: Terminal Shell with cat Command in Container
        desc: Detect when someone executes cat command inside a container
        condition: >
          evt.type = execve 
          and container 
          and proc.name = "cat"
        output: >
          CRITICAL: Cat command executed in a container 
          (user=%user.name uid=%user.uid process=%proc.name
          command=%proc.cmdline container_id=%container.id 
          container_name=%container.name k8s_ns=%k8s.ns.name)
        priority: CRITICAL
        tags: [security, terminal, exec]